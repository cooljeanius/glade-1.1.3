# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = /bin/sh

srcdir = .
top_srcdir = ..

prefix = /opt/local
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/share/info
mandir = ${prefix}/share/man
includedir = ${prefix}/include
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/glade
pkglibdir = $(libdir)/glade
pkgincludedir = $(includedir)/glade

top_builddir = ..

ACLOCAL = ${SHELL} /private/var/root/Downloads/glade-1.1.3/missing --run aclocal-1.11
AUTOCONF = ${SHELL} /private/var/root/Downloads/glade-1.1.3/missing --run autoconf
AUTOMAKE = ${SHELL} /private/var/root/Downloads/glade-1.1.3/missing --run automake-1.11
AUTOHEADER = ${SHELL} /private/var/root/Downloads/glade-1.1.3/missing --run autoheader

INSTALL = /usr/bin/install -c
INSTALL_PROGRAM = ${INSTALL} $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_SCRIPT = ${INSTALL}
transform = s,x,x,

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = 
host_triplet = x86_64-apple-darwin11.4.2
AS = @AS@
CATALOGS = 
CATOBJEXT = NONE
CC = gcc
DATADIRNAME = lib
DLLTOOL = false
ECHO = @ECHO@
EXEEXT = 
GETTEXT_PACKAGE = glade-2.0
GLADE_CFLAGS = -I/sw/include/libxml2 -I/sw/include -I/sw/include/gtk-2.0 -I/sw/lib/gtk-2.0/include -I/sw/include/atk-1.0 -I/sw/include/cairo -I/sw/include/pango-1.0 -I/sw/include/glib-2.0 -I/sw/lib/glib-2.0/include -I/sw/include/freetype2 -I/sw/include/libgnomeui-2.0 -I/sw/include/libgnome-2.0 -I/sw/include/libbonoboui-2.0 -I/sw/include/libgnomecanvas-2.0 -I/sw/include/gnome-vfs-2.0 -I/sw/lib/gnome-vfs2.16/gnome-vfs-2.0/include -I/sw/include/libbonobo-2.0 -I/sw/include/orbit-2.0 -I/sw/include/bonobo-activation-2.0 -I/sw/include/libart-2.0 -I/sw/include/gconf/2 -I/usr/X11/include -DORBIT2=1 
GLADE_DEPRECATION_CFLAGS = 
GLADE_GNOME_DB_DIR = 
GLADE_GNOME_DB_LIB = 
GLADE_GNOME_DIR = gnome
GLADE_GNOME_LIB = gnome/libgnomewidgets.a
GLADE_LIBS = -L/sw/lib -L/sw/lib/gnome-vfs2.16 -L/usr/X11/lib -lxml2 -lgnomeui-2 -lSM -lICE -lgnomevfs-2 -lgconf-2 -lbonoboui-2 -lgnomecanvas-2 -lgnome-2 -lpopt -lart_lgpl_2 -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lgdk_pixbuf-2.0 -lpangocairo-1.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lbonobo-2 -lbonobo-activation -lgmodule-2.0 -lORBit-2 -lgthread-2.0 -lgobject-2.0 -lglib-2.0 -lintl  -L/usr/X11/lib -R/usr/X11/lib  -lSM -lICE -lX11 
GMOFILES =  az.gmo ca.gmo cs.gmo da.gmo de.gmo el.gmo en_GB.gmo es.gmo fr.gmo ga.gmo gl.gmo hu.gmo it.gmo ja.gmo ko.gmo lv.gmo nn.gmo no.gmo pl.gmo pt.gmo pt_BR.gmo ro.gmo ru.gmo sk.gmo sv.gmo tr.gmo uk.gmo vi.gmo zh_CN.gmo
GMSGFMT = /sw/bin/msgfmt
INSTOBJEXT = 
INTLDEPS = @INTLDEPS@
INTLLIBS = 
INTLOBJS = @INTLOBJS@
INTLTOOL_CAVES_RULE = %.caves:     %.caves.in     $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; $(INTLTOOL_V_MERGE)LC_ALL=C $(INTLTOOL_MERGE) $(INTLTOOL_V_MERGE_OPTIONS) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_DESKTOP_RULE = %.desktop:   %.desktop.in   $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; $(INTLTOOL_V_MERGE)LC_ALL=C $(INTLTOOL_MERGE) $(INTLTOOL_V_MERGE_OPTIONS) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_DIRECTORY_RULE = %.directory: %.directory.in $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; $(INTLTOOL_V_MERGE)LC_ALL=C $(INTLTOOL_MERGE) $(INTLTOOL_V_MERGE_OPTIONS) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_EXTRACT = /sw/bin/intltool-extract
INTLTOOL_KEYS_RULE = %.keys:      %.keys.in      $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; $(INTLTOOL_V_MERGE)LC_ALL=C $(INTLTOOL_MERGE) $(INTLTOOL_V_MERGE_OPTIONS) -k -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_MERGE = /sw/bin/intltool-merge
INTLTOOL_OAF_RULE = %.oaf:       %.oaf.in       $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; $(INTLTOOL_V_MERGE)LC_ALL=C $(INTLTOOL_MERGE) $(INTLTOOL_V_MERGE_OPTIONS) -o -p $(top_srcdir)/po $< $@
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_PONG_RULE = %.pong:      %.pong.in      $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; $(INTLTOOL_V_MERGE)LC_ALL=C $(INTLTOOL_MERGE) $(INTLTOOL_V_MERGE_OPTIONS) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_PROP_RULE = %.prop:      %.prop.in      $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; $(INTLTOOL_V_MERGE)LC_ALL=C $(INTLTOOL_MERGE) $(INTLTOOL_V_MERGE_OPTIONS) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SCHEMAS_RULE = %.schemas:   %.schemas.in   $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; $(INTLTOOL_V_MERGE)LC_ALL=C $(INTLTOOL_MERGE) $(INTLTOOL_V_MERGE_OPTIONS) -s -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SERVER_RULE = %.server:    %.server.in    $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; $(INTLTOOL_V_MERGE)LC_ALL=C $(INTLTOOL_MERGE) $(INTLTOOL_V_MERGE_OPTIONS) -o -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SHEET_RULE = %.sheet:     %.sheet.in     $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; $(INTLTOOL_V_MERGE)LC_ALL=C $(INTLTOOL_MERGE) $(INTLTOOL_V_MERGE_OPTIONS) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SOUNDLIST_RULE = %.soundlist: %.soundlist.in $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; $(INTLTOOL_V_MERGE)LC_ALL=C $(INTLTOOL_MERGE) $(INTLTOOL_V_MERGE_OPTIONS) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_UI_RULE = %.ui:        %.ui.in        $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; $(INTLTOOL_V_MERGE)LC_ALL=C $(INTLTOOL_MERGE) $(INTLTOOL_V_MERGE_OPTIONS) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_UPDATE = /sw/bin/intltool-update
INTLTOOL_XML_RULE = %.xml:       %.xml.in       $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; $(INTLTOOL_V_MERGE)LC_ALL=C $(INTLTOOL_MERGE) $(INTLTOOL_V_MERGE_OPTIONS) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
MAINT = #
MAKEINFO = ${SHELL} /private/var/root/Downloads/glade-1.1.3/missing --run makeinfo
MKINSTALLDIRS = ./mkinstalldirs
OBJDUMP = false
OBJEXT = o
PACKAGE = glade
PKG_CONFIG = /sw/bin/pkg-config
POFILES =  az.po ca.po cs.po da.po de.po el.po en_GB.po es.po fr.po ga.po gl.po hu.po it.po ja.po ko.po lv.po nn.po no.po pl.po pt.po pt_BR.po ro.po ru.po sk.po sv.po tr.po uk.po vi.po zh_CN.po
POSUB = po
RANLIB = ranlib
SCROLLKEEPER_CONFIG = /sw/bin/scrollkeeper-config
SCROLLKEEPER_REQUIRED = 0.1.4
STRIP = strip
USE_NLS = yes
VERSION = 1.1.3

bin_PROGRAMS = glade-2

INCLUDES =  	-DGLADE_DATADIR=\""$(datadir)"\" 	-DGLADE_LOCALEDIR=\""$(prefix)/${DATADIRNAME}/locale"\"		$(GLADE_CFLAGS) 	$(GLADE_DEPRECATION_CFLAGS)


DIST_SUBDIRS = gbwidgets gnome gnome-db data

SUBDIRS = gbwidgets $(GLADE_GNOME_DIR) $(GLADE_GNOME_DB_DIR) data

glade_2_LDADD =  	gbwidgets/libgbwidgets.a		$(GLADE_GNOME_LIB) 			$(GLADE_GNOME_DB_LIB)			$(GLADE_LIBS)				$(INTLLIBS)


glade_2_DEPENDENCIES =  	gbwidgets/libgbwidgets.a 	$(GLADE_GNOME_LIB) 	$(GLADE_GNOME_DB_LIB)


glade_2_SOURCES =  	debug.c				editor.c			gb.c				gbwidget.c			glade_widget_data.c		gbsource.c			glade.c				glade_atk.c			glade_clipboard.c		glade_gnome.c			glade_gnomelib.c		glade_gnomedblib.c		glade_gtk12lib.c		glade_keys_dialog.c		glade_menu_editor.c		glade_palette.c			glade-parser.c			glade_plugin.c			glade_project.c			glade_project_options.c		glade_project_view.c		glade_project_window.c		keys.c				load.c				main.c				palette.c			property.c			save.c				source.c			source_os2.c			styles.c			tree.c				utils.c


noinst_HEADERS =  	debug.h				editor.h			gb.h				gbwidget.h			glade_widget_data.h		gbsource.h			glade.h				glade_atk.h			glade_clipboard.h		glade_gnome.h			glade_gnomelib.h		glade_gnomedblib.h		glade_gtk12lib.h		glade_keys_dialog.h		glade_menu_editor.h		glade_palette.h			glade-parser.h			glade_plugin.h			glade_project.h			glade_project_options.h		glade_project_view.h		glade_project_window.h		gladeconfig.h			keys.h				load.h				palette.h			property.h			save.h				source.h			source_os2.h			styles.h			tree.h				utils.h

mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES = 
bin_PROGRAMS =  glade-2$(EXEEXT)
PROGRAMS =  $(bin_PROGRAMS)


DEFS = -DHAVE_CONFIG_H -I. -I$(srcdir) -I..
CPPFLAGS = -I/opt/local/include
LDFLAGS = 
LIBS = 
X_CFLAGS = 
X_LIBS =  -L/usr/X11/lib -R/usr/X11/lib
X_EXTRA_LIBS = 
X_PRE_LIBS =  -lSM -lICE
glade_2_OBJECTS =  debug.$(OBJEXT) editor.$(OBJEXT) gb.$(OBJEXT) \
gbwidget.$(OBJEXT) glade_widget_data.$(OBJEXT) gbsource.$(OBJEXT) \
glade.$(OBJEXT) glade_atk.$(OBJEXT) glade_clipboard.$(OBJEXT) \
glade_gnome.$(OBJEXT) glade_gnomelib.$(OBJEXT) \
glade_gnomedblib.$(OBJEXT) glade_gtk12lib.$(OBJEXT) \
glade_keys_dialog.$(OBJEXT) glade_menu_editor.$(OBJEXT) \
glade_palette.$(OBJEXT) glade-parser.$(OBJEXT) glade_plugin.$(OBJEXT) \
glade_project.$(OBJEXT) glade_project_options.$(OBJEXT) \
glade_project_view.$(OBJEXT) glade_project_window.$(OBJEXT) \
keys.$(OBJEXT) load.$(OBJEXT) main.$(OBJEXT) palette.$(OBJEXT) \
property.$(OBJEXT) save.$(OBJEXT) source.$(OBJEXT) source_os2.$(OBJEXT) \
styles.$(OBJEXT) tree.$(OBJEXT) utils.$(OBJEXT)
glade_2_LDFLAGS = 
CFLAGS = -g -O2
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
HEADERS =  $(noinst_HEADERS)

DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(glade_2_SOURCES)
OBJECTS = $(glade_2_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .lo .o .obj .s
$(srcdir)/Makefile.in: # Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps glade/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

glade-2$(EXEEXT): $(glade_2_OBJECTS) $(glade_2_DEPENDENCIES)
	@rm -f glade-2$(EXEEXT)
	$(LINK) $(glade_2_LDFLAGS) $(glade_2_OBJECTS) $(glade_2_LDADD) $(LIBS)

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.



all-recursive install-data-recursive install-exec-recursive \
installdirs-recursive install-recursive uninstall-recursive  \
check-recursive installcheck-recursive info-recursive dvi-recursive:
	@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	rev=''; list='$(SUBDIRS)'; for subdir in $$list; do \
	  rev="$$subdir $$rev"; \
	  test "$$subdir" != "." || dot_seen=yes; \
	done; \
	test "$$dot_seen" = "no" && rev=". $$rev"; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
   if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
   fi; \
	done; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = glade

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	for subdir in $(DIST_SUBDIRS); do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    chmod 777 $(distdir)/$$subdir; \
	    (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir=../$(top_distdir) distdir=../$(distdir)/$$subdir distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) top_distdir="$(top_distdir)" distdir="$(distdir)" dist-hook
debug.o: debug.c gladeconfig.h ../config.h debug.h
editor.o: editor.c gladeconfig.h ../config.h debug.h glade_clipboard.h \
	glade_project.h gbwidget.h glade.h styles.h glade_widget_data.h \
	glade-parser.h gbsource.h glade_palette.h \
	glade_project_window.h glade_project_view.h property.h utils.h \
	editor.h tree.h gb.h load.h save.h source.h \
	graphics/placeholder.xpm
gb.o: gb.c ../config.h gb.h gladeconfig.h debug.h editor.h gbwidget.h \
	glade.h styles.h glade_widget_data.h glade-parser.h gbsource.h \
	glade_project.h load.h property.h save.h source.h utils.h
gbsource.o: gbsource.c gladeconfig.h ../config.h debug.h gb.h editor.h \
	gbwidget.h glade.h styles.h glade_widget_data.h glade-parser.h \
	gbsource.h glade_project.h load.h property.h save.h source.h \
	utils.h glade_gnome.h glade_atk.h
gbwidget.o: gbwidget.c gladeconfig.h ../config.h debug.h editor.h gb.h \
	gbwidget.h glade.h styles.h glade_widget_data.h glade-parser.h \
	gbsource.h glade_project.h load.h property.h save.h source.h \
	utils.h glade_atk.h glade_gnome.h glade_gtk12lib.h \
	glade_plugin.h palette.h tree.h glade_gnomelib.h \
	glade_gnomedblib.h
glade-parser.o: glade-parser.c ../config.h glade-parser.h
glade.o: glade.c gladeconfig.h ../config.h debug.h glade.h \
	glade_clipboard.h glade_project.h gbwidget.h styles.h \
	glade_widget_data.h glade-parser.h gbsource.h editor.h load.h \
	property.h palette.h tree.h utils.h
glade_atk.o: glade_atk.c ../config.h gladeconfig.h debug.h property.h \
	gbwidget.h glade.h styles.h glade_widget_data.h glade-parser.h \
	gbsource.h glade_project.h save.h source.h utils.h glade_atk.h \
	graphics/glade-atk.xpm
glade_clipboard.o: glade_clipboard.c ../config.h gladeconfig.h debug.h \
	editor.h glade_clipboard.h glade_project.h gbwidget.h glade.h \
	styles.h glade_widget_data.h glade-parser.h gbsource.h load.h \
	tree.h utils.h gb.h property.h save.h source.h
glade_gnome.o: glade_gnome.c ../config.h glade_gnome.h gbwidget.h \
	glade.h styles.h glade_widget_data.h glade-parser.h gbsource.h \
	glade_project.h source.h utils.h
glade_gnomedblib.o: glade_gnomedblib.c gladeconfig.h ../config.h debug.h \
	glade.h gbwidget.h styles.h glade_widget_data.h glade-parser.h \
	gbsource.h
glade_gnomelib.o: glade_gnomelib.c gladeconfig.h ../config.h debug.h \
	glade.h gbwidget.h styles.h glade_widget_data.h glade-parser.h \
	gbsource.h
glade_gtk12lib.o: glade_gtk12lib.c gladeconfig.h ../config.h debug.h \
	glade.h gbwidget.h styles.h glade_widget_data.h glade-parser.h \
	gbsource.h
glade_keys_dialog.o: glade_keys_dialog.c gladeconfig.h ../config.h \
	debug.h keys.h glade_keys_dialog.h gbwidget.h glade.h styles.h \
	glade_widget_data.h glade-parser.h gbsource.h
glade_menu_editor.o: glade_menu_editor.c gladeconfig.h ../config.h \
	debug.h glade_gnome.h gbwidget.h glade.h styles.h \
	glade_widget_data.h glade-parser.h gbsource.h gb.h editor.h \
	glade_project.h load.h property.h save.h source.h utils.h \
	glade_menu_editor.h glade_keys_dialog.h tree.h
glade_palette.o: glade_palette.c gladeconfig.h ../config.h debug.h \
	graphics/selector.xpm glade_palette.h glade.h
glade_plugin.o: glade_plugin.c gladeconfig.h ../config.h debug.h \
	gbwidget.h glade.h styles.h glade_widget_data.h glade-parser.h \
	gbsource.h glade_plugin.h palette.h utils.h
glade_project.o: glade_project.c gladeconfig.h ../config.h debug.h \
	editor.h glade_menu_editor.h glade_project.h gbwidget.h glade.h \
	styles.h glade_widget_data.h glade-parser.h gbsource.h load.h \
	property.h save.h source.h tree.h utils.h
glade_project_options.o: glade_project_options.c gladeconfig.h \
	../config.h debug.h glade_project_options.h glade_project.h \
	gbwidget.h glade.h styles.h glade_widget_data.h glade-parser.h \
	gbsource.h utils.h
glade_project_view.o: glade_project_view.c gladeconfig.h ../config.h \
	debug.h editor.h glade_project_view.h glade_project.h \
	gbwidget.h glade.h styles.h glade_widget_data.h glade-parser.h \
	gbsource.h utils.h
glade_project_window.o: glade_project_window.c gladeconfig.h ../config.h \
	debug.h glade.h glade_clipboard.h glade_project.h gbwidget.h \
	styles.h glade_widget_data.h glade-parser.h gbsource.h \
	glade_palette.h glade_project_options.h glade_project_window.h \
	glade_project_view.h editor.h load.h utils.h
glade_widget_data.o: glade_widget_data.c gladeconfig.h ../config.h \
	debug.h glade_widget_data.h glade.h
keys.o: keys.c gladeconfig.h ../config.h debug.h keys.h
load.o: load.c gladeconfig.h ../config.h debug.h glade_atk.h gbwidget.h \
	glade.h styles.h glade_widget_data.h glade-parser.h gbsource.h \
	glade_project.h load.h save.h utils.h
main.o: main.c gladeconfig.h ../config.h debug.h glade.h glade_palette.h \
	glade_project.h gbwidget.h styles.h glade_widget_data.h \
	glade-parser.h gbsource.h glade_project_window.h \
	glade_project_view.h property.h save.h tree.h utils.h
palette.o: palette.c gladeconfig.h ../config.h debug.h glade.h \
	gbwidget.h styles.h glade_widget_data.h glade-parser.h \
	gbsource.h glade_gtk12lib.h palette.h glade_palette.h \
	glade_project.h
property.o: property.c gladeconfig.h ../config.h debug.h editor.h \
	glade_atk.h gbwidget.h glade.h styles.h glade_widget_data.h \
	glade-parser.h gbsource.h glade_keys_dialog.h glade_project.h \
	glade_project_window.h glade_project_view.h utils.h property.h \
	load.h save.h
save.o: save.c gladeconfig.h ../config.h debug.h glade_project.h \
	gbwidget.h glade.h styles.h glade_widget_data.h glade-parser.h \
	gbsource.h save.h utils.h
source.o: source.c gladeconfig.h ../config.h debug.h gbwidget.h glade.h \
	styles.h glade_widget_data.h glade-parser.h gbsource.h \
	glade_project.h source.h utils.h
source_os2.o: source_os2.c gladeconfig.h ../config.h debug.h gbwidget.h \
	glade.h styles.h glade_widget_data.h glade-parser.h gbsource.h \
	glade_project.h source.h utils.h
styles.o: styles.c
tree.o: tree.c gladeconfig.h ../config.h debug.h gbwidget.h glade.h \
	styles.h glade_widget_data.h glade-parser.h gbsource.h editor.h \
	tree.h utils.h
utils.o: utils.c gladeconfig.h ../config.h debug.h gb.h editor.h \
	gbwidget.h glade.h styles.h glade_widget_data.h glade-parser.h \
	gbsource.h glade_project.h load.h property.h save.h source.h \
	utils.h glade_project_window.h glade_project_view.h

info-am:
info: info-recursive
dvi-am:
dvi: dvi-recursive
check-am: all-am
check: check-recursive
installcheck-am:
installcheck: installcheck-recursive
install-exec-am: install-binPROGRAMS
install-exec: install-exec-recursive

install-data-am:
install-data: install-data-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-recursive
uninstall-am: uninstall-binPROGRAMS
uninstall: uninstall-recursive
all-am: Makefile $(PROGRAMS) $(HEADERS)
all-redirect: all-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs)  $(DESTDIR)$(bindir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-binPROGRAMS mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-recursive

clean-am:  clean-binPROGRAMS clean-compile clean-libtool clean-tags \
		clean-generic mostlyclean-am

clean: clean-recursive

distclean-am:  distclean-binPROGRAMS distclean-compile distclean-libtool \
		distclean-tags distclean-generic clean-am
	-rm -f libtool

distclean: distclean-recursive

maintainer-clean-am:  maintainer-clean-binPROGRAMS \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-recursive

.PHONY: mostlyclean-binPROGRAMS distclean-binPROGRAMS clean-binPROGRAMS \
maintainer-clean-binPROGRAMS uninstall-binPROGRAMS install-binPROGRAMS \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool install-data-recursive \
uninstall-data-recursive install-exec-recursive \
uninstall-exec-recursive installdirs-recursive uninstalldirs-recursive \
all-recursive check-recursive installcheck-recursive info-recursive \
dvi-recursive mostlyclean-recursive distclean-recursive clean-recursive \
maintainer-clean-recursive tags tags-recursive mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir info-am info \
dvi-am dvi check check-am installcheck-am installcheck install-exec-am \
install-exec install-data-am install-data install-am install \
uninstall-am uninstall all-redirect all-am all installdirs-am \
installdirs mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean




dist-hook:
	mkdir $(distdir)/graphics
	cp -p $(srcdir)/graphics/*.xpm $(distdir)/graphics
	cp -p $(srcdir)/graphics/*.png $(distdir)/graphics

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
